{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\illum\\\\Work\\\\Code\\\\NextRedux\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { wrapper } from '../src/store';\n\nconst WrappedApp = ({\n  Component,\n  pageProps\n}) => /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 50\n}, this);\n\nWrappedApp.getInitialProps = async appContext => {\n  ctx.store.dispatch({\n    type: 'TOE',\n    payload: 'was set in _app'\n  });\n  return {\n    pageProps: _objectSpread(_objectSpread({}, Component.getInitialProps ? await Component.getInitialProps(ctx) : {}), {}, {\n      // Some custom thing for all pages\n      pathname: ctx.pathname\n    })\n  };\n};\n\nexport default wrapper.withRedux(WrappedApp);","map":{"version":3,"sources":["C:/Users/illum/Work/Code/NextRedux/pages/_app.js"],"names":["React","wrapper","WrappedApp","Component","pageProps","getInitialProps","appContext","ctx","store","dispatch","type","payload","pathname","withRedux"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,kBAA8B,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,QAAjD;;AAEAF,UAAU,CAACG,eAAX,GAA6B,MAAOC,UAAP,IAAsB;AACjDC,EAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAnB;AACA,SAAO;AACLP,IAAAA,SAAS,kCAEHD,SAAS,CAACE,eAAV,GACA,MAAMF,SAAS,CAACE,eAAV,CAA0BE,GAA1B,CADN,GAEA,EAJG;AAKP;AACAK,MAAAA,QAAQ,EAAEL,GAAG,CAACK;AANP;AADJ,GAAP;AAUD,CAZD;;AAcA,eAAeX,OAAO,CAACY,SAAR,CAAkBX,UAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { wrapper } from '../src/store';\r\n\r\nconst WrappedApp = ({ Component, pageProps }) => <Component {...pageProps} />;\r\n\r\nWrappedApp.getInitialProps = async (appContext) => {\r\n  ctx.store.dispatch({ type: 'TOE', payload: 'was set in _app' });\r\n  return {\r\n    pageProps: {\r\n      // Call page-level getInitialProps\r\n      ...(Component.getInitialProps\r\n        ? await Component.getInitialProps(ctx)\r\n        : {}),\r\n      // Some custom thing for all pages\r\n      pathname: ctx.pathname,\r\n    },\r\n  };\r\n};\r\n\r\nexport default wrapper.withRedux(WrappedApp);\r\n"]},"metadata":{},"sourceType":"module"}